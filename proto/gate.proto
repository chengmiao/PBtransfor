//
// 这个文件描述了Gate需要处理的协议
//

syntax = "proto3";
import "gs.proto";
package GATE;

//
//CLI_:客户端,GATE:网关,RS_:排行榜服务器,BS_:负载均衡服务器,CS_:中央服务器
//

//----------------------------------------------------------------------------------------------------
//-------------------------------------以下协议是客户端发出来的---------------------------------------

//客户端发出的Gs请求身份认证
message CLI_GsAuthenReq {
    string token = 1;
    string app_id = 2;
}

//客户端发出的，请求更新玩家的排行榜
message CLI_UpdateRankReq {
	uint32 template_id = 1;
	uint32 instance_id = 2;
    uint64 role_id = 3;
    string sort_field = 4;
    bytes props = 5;
	bytes status = 6;
}

//客户端发出的，查询排行榜数据
message CLI_QueryRankReq {
	uint32 template_id = 1;
	uint32 instance_id = 2;
    uint64 role_id = 3;
	bytes status = 4;
}

//客户端发出的，查询历史排行榜数据
message CLI_QueryHistoryRankReq {
	uint32 template_id = 1;
	uint32 instance_id = 2;
    uint64 role_id = 3;
	bytes status = 4;
}

//----------------------------------------------------------------------------------------------------
//-------------------------------------以下协议是中央服务器发出来的---------------------------------------

message RankDefine {
	uint32 template_id = 1;
	uint32 rs_id = 2;
}

message SwitchedRanks {
	repeated RankDefine ranks = 1;
}

//CS报告给RankServer自身信息
message CS_CsInfoNtf {
	uint32 server_type = 1;
	SwitchedRanks switched_ranks = 2;
}

//Cs发出的对Gs认证的回应
message CS_GsAuthenAck {
    GS.GATE_GsAuthenAck.ErrorCode error_code = 1;
	string app_id = 2;
	uint64 gs_sid = 3;
}

//中央服务器发出的，切换排行榜服务器
message CS_SwitchRsNtf {
	uint64 trans_id = 1;
	uint32 to_rs_server_id = 2;
	repeated uint32 template_ids = 3;
}

//----------------------------------------------------------------------------------------------------
//-------------------------------------以下协议是排行榜服务器发出来的---------------------------------------

//RankServer发送给gs，更新玩家的排行榜的回应
message RS_UpdateRankAck {
	uint64 gs_sid = 1;
	GS.GATE_UpdateRankAck.ErrorCode error_code = 2;
	uint32 template_id = 3;
	uint32 instance_id = 4;
    uint64 role_id = 5;
	uint32 rank_pos = 6;
	bytes status = 7;
}

//RankServer发送给gs，更新玩家的排行榜的回应
message RS_QueryRankAck {	
	uint64 gs_sid = 1;
	GS.GATE_QueryRankAck.ErrorCode error_code = 2;
	uint32 template_id = 3;
	uint32 instance_id = 4;
	repeated GS.RankItem rank_items = 5;
	GS.RankItem me = 6;
	bytes status = 7;
}

//RankServer发送给gs，更新玩家的历史排行榜的回应
message RS_QueryHistoryRankAck {	
	uint64 gs_sid = 1;
	GS.GATE_QueryHistoryRankAck.ErrorCode error_code = 2;
	uint32 template_id = 3;
	uint32 instance_id = 4;
	repeated GS.RankItem rank_items = 5;
	GS.RankItem me = 6;
	bytes status = 7;
}
